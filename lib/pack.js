// Generated by IcedCoffeeScript 1.4.0c
(function() {
  var Buffer, C, Packer, U32MAX, is_array, is_int, u64max_minus_i;

  C = require('./const').C;

  Buffer = require('./buffer').Buffer;

  U32MAX = require('./util').U32MAX;

  is_array = function(x) {
    return Object.prototype.toString.call(x) === '[object Array]';
  };

  is_int = function(f) {
    return Math.floor(f) === f;
  };

  u64max_minus_i = function(i) {
    var a, b, x, y;
    x = Math.floor(i / U32MAX);
    y = i % U32MAX;
    a = U32MAX - x - (y > 0 ? 1 : 0);
    b = y === 0 ? 0 : U32MAX - y;
    return [a, b];
  };

  exports.Packer = Packer = (function() {

    function Packer(_opts) {
      this._opts = _opts != null ? _opts : {};
      this._buffer = new Buffer();
    }

    Packer.prototype.output = function(enc) {
      return this._buffer.toString(enc);
    };

    Packer.prototype.p = function(o) {
      var ba;
      switch (typeof o) {
        case 'number':
          return this.p_number(o);
        case 'string':
          return this.p_utf8_string(o);
        case 'boolean':
          return this.p_boolean(o);
        case 'undefined':
          return this.p_null();
        case 'object':
          if (o == null) {
            return this.p_null();
          } else if (is_array(o)) {
            return this.p_array(o);
          } else if ((ba = Buffer.to_byte_array(o))) {
            return this.p_byte_array(ba);
          } else {
            return this.p_obj(o);
          }
      }
    };

    Packer.prototype.p_number = function(n) {
      if (!is_int(n)) {
        return this.p_pack_double(n);
      } else if (n >= 0) {
        return this.p_positive_int(n);
      } else {
        return this.p_negative_int(n);
      }
    };

    Packer.prototype.p_pack_double = function(d) {
      if (this._opts.floats != null) {
        this.p_uint8(C.float);
        return this._buffer.push_float32(d);
      } else {
        this.p_uint8(C.double);
        return this._buffer.push_float64(d);
      }
    };

    Packer.prototype.p_uint8 = function(b) {
      return this._buffer.push_uint8(b);
    };

    Packer.prototype.p_uint16 = function(s) {
      return this._buffer.push_uint16(s);
    };

    Packer.prototype.p_uint32 = function(w) {
      return this._buffer.push_uint32(w);
    };

    Packer.prototype.p_int8 = function(b) {
      return this._buffer.push_int8(b);
    };

    Packer.prototype.p_int16 = function(s) {
      return this._buffer.push_int16(s);
    };

    Packer.prototype.p_int32 = function(w) {
      return this._buffer.push_int32(w);
    };

    Packer.prototype.p_neg_int64 = function(i) {
      var a, abs_i, b, _ref;
      abs_i = 0 - i;
      _ref = u64max_minus_i(abs_i), a = _ref[0], b = _ref[1];
      this.p_uint32(a);
      return this.p_uint32(b);
    };

    Packer.prototype.p_boolean = function(b) {
      return this.p_uint8(b ? C["true"] : C["false"]);
    };

    Packer.prototype.p_null = function() {
      return this.p_uint8(C["null"]);
    };

    Packer.prototype.p_array = function(a) {
      var e, _i, _len, _results;
      this.p_len(a.length, C.fix_array_min, C.fix_array_max, C.array16, C.array32);
      _results = [];
      for (_i = 0, _len = a.length; _i < _len; _i++) {
        e = a[_i];
        _results.push(this.p(e));
      }
      return _results;
    };

    Packer.prototype.p_obj = function(o) {
      var k, n, v, _results;
      n = (Object.keys(o)).length;
      this.p_len(n, C.fix_map_min, C.fix_map_max, C.map16, C.map32);
      _results = [];
      for (k in o) {
        v = o[k];
        this.p(k);
        _results.push(this.p(v));
      }
      return _results;
    };

    Packer.prototype.p_positive_int = function(i) {
      if (i <= 0x7f) {
        return this.p_uint8(i);
      } else if (i <= 0xff) {
        this.p_uint8(C.uint8);
        return this.p_uint8(i);
      } else if (i <= 0xffff) {
        this.p_uint8(C.uint16);
        return this.p_uint16(i);
      } else if (i < U32MAX) {
        this.p_uint8(C.uint32);
        return this.p_uint32(i);
      } else {
        this.p_uint8(C.uint64);
        this.p_uint32(Math.floor(i / U32MAX));
        return this.p_uint32(i & (U32MAX - 1));
      }
    };

    Packer.prototype.p_negative_int = function(i) {
      if (i >= -32) {
        return this.p_int8(i);
      } else if (i >= -128) {
        this.p_uint8(C.int8);
        return this.p_int8(i);
      } else if (i >= -32768) {
        this.p_uint8(C.int16);
        return this.p_int16(i);
      } else if (i >= -2147483648) {
        this.p_uint8(C.int32);
        return this.p_int32(i);
      } else {
        this.p_uint8(C.int64);
        return this.p_neg_int64(i);
      }
    };

    Packer.prototype.p_byte_array = function(b) {
      if (this._opts.byte_arrays) {
        this.p_uint8(C.byte_array);
      } else {
        b = Buffer.ui8a_to_binary(b);
      }
      this.p_len(b.length, C.fix_raw_min, C.fix_raw_max, C.raw16, C.raw32);
      return this._buffer.push_buffer(b);
    };

    Packer.prototype.p_utf8_string = function(b) {
      b = Buffer.utf8_to_ui8a(b);
      this.p_len(b.length, C.fix_raw_min, C.fix_raw_max, C.raw16, C.raw32);
      return this._buffer.push_buffer(b);
    };

    Packer.prototype.p_len = function(l, smin, smax, m, b) {
      if (l <= (smax - smin)) {
        return this.p_uint8(l | smin);
      } else if (l <= 0xffff) {
        this.p_uint8(m);
        return this.p_uint16(l);
      } else {
        this.p_uint8(b);
        return this.p_uint32(l);
      }
    };

    return Packer;

  })();

  exports.pack = function(x, enc, opts) {
    var packer;
    if (opts == null) opts = {};
    packer = new Packer(opts);
    packer.p(x);
    return packer.output(enc);
  };

}).call(this);
